generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Admin {
  id              String   @id @default(uuid())
  email           String   @unique
  passwordHash    String
  sessionDuration Int      @default(3600)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  name            String
  cameras         Camera[]
  people          Person[]
}

model Person {
  id              String         @id @default(uuid())
  fullName        String
  position        String?
  createdAt       DateTime       @default(now())
  adminId         String
  faceImageUrls   String[]
  profileImageUrl String?
  updatedAt       DateTime       @updatedAt
  logs            DetectionLog[]
  admin           Admin          @relation(fields: [adminId], references: [id])

  @@index([adminId])
}

model Camera {
  id        String             @id @default(uuid())
  name      String
  location  String?
  createdAt DateTime           @default(now())
  adminId   String
  updatedAt DateTime           @updatedAt
  admin     Admin              @relation(fields: [adminId], references: [id])
  sessions  DetectionSession[]

  @@index([adminId])
}

model DetectionSession {
  id        String         @id @default(uuid())
  startedAt DateTime       @default(now())
  endedAt   DateTime?
  cameraId  String
  logs      DetectionLog[]
  camera    Camera         @relation(fields: [cameraId], references: [id])

  @@index([cameraId])
}

model DetectionLog {
  id         String           @id @default(uuid())
  detectedAt DateTime         @default(now())
  imageUrl   String
  sessionId  String
  personId   String
  cameraId   String?
  person     Person           @relation(fields: [personId], references: [id])
  session    DetectionSession @relation(fields: [sessionId], references: [id])

  @@index([sessionId])
  @@index([cameraId])
  @@index([personId])
}
